### =============================================================
### This configuration file is used by CircleCI build server
### https://circleci.com/docs/config-sample
### =============================================================
version: 2.1

references:
  install_poetry: &install_poetry
      - run:
          name: Install Poetry
          command: |
            # in old images we need to remove existing poetry
            rm -rf $HOME/.poetry/bin/poetry
            sudo curl -sSL https://install.python-poetry.org | python3 -
            poetry --version

  install_project_dependencies: &install_project_dependencies
      - run:
          name: Install Project Dependencies
          command: |
            poetry install --no-ansi
jobs:
  run-unit-tests:
    parameters:
      pythonversion:
        type: string
    docker:
      - image: cimg/python:<< parameters.pythonversion >>-node
    steps:
      - checkout
      - <<: *install_poetry
      - <<: *install_project_dependencies
      - run:
          name: Run Unit Tests
          command: |
            poetry run pytest -v tests
  verify:
    docker:
        - image: cimg/python:3.10-node
    steps:
      - checkout
      - run:
          name: Verify
          command: |
            ./verify.sh

  publish-to-test-pypi:
    docker:
      - image: cimg/python:3.10-node
    steps:
      - run:
          name: Publish Package Test PyPI
          command: |
              poetry config pypi-token.testpypi $TEST_PYPI_TOKEN
              poetry publish -r testpypi --build

  # publish-to-pypi:
  #   docker:
  #     - image: cimg/python:3.10-node
  #   steps:
  #     - run:
    #       name: Publish Package PyPI
    #       command: |
    #           poetry config pypi-token.pypi $PYPI_TOKEN
    #           poetry publish 


workflows:
  build_and_release:
    jobs:
      - run-unit-tests:
          matrix:
            parameters:
              pythonversion: ["3.8", "3.9", "3.10"]   
          name: run-unit-tests-<< matrix.pythonversion >>
      - verify
      - publish-to-test-pypi:
          filters:
            branches:
              only: master
          requires:
            - run-unit-tests
      # - publish-to-pypi:
      #     requires:
      #       - run-unit-tests
      #     filters:
      #       tags:
      #         only: /^v\d+\.\d+\.\d+$/ # only run on tags
          