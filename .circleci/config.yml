### =============================================================
### This configuration file is used by CircleCI build server
### https://circleci.com/docs/config-sample
### =============================================================
version: 2.1

references:
  install_poetry: &install_poetry
      - run:
          name: Install Poetry
          command: |
            # in old images we need to remove existing poetry
            rm -rf $HOME/.poetry/bin/poetry
            sudo curl -sSL https://install.python-poetry.org | python3 -
            poetry --version

  install_project_dependencies: &install_project_dependencies    
      - run:
          name: Install Project Dependencies
          command: |
            poetry install --no-interaction --no-ansi --no-root

  poetry_build: &poetry_build
      - run:
          name: Build Package
          command: |
            poetry build
jobs:
  run-unit-tests:
    parameters:
      pythonversion:
        type: string
    docker:
      - image: cimg/python:<< parameters.pythonversion >>
    steps:
      - checkout
      - <<: *install_poetry
      - <<: *install_project_dependencies
      - run:
          name: Run Unit Tests
          command: |
            mkdir test-results
            poetry run python -m pytest  --junitxml=test-results/junit.xml -v tests
      - store_test_results:
          path: test-results
  verify:
    machine:
        image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run:
          name: Verify
          command: |
            ./verify.sh
  
  publish-to-test-pypi:
    docker:
        # python 3.10 is the latest supported version
      - image: cimg/python:3.10-node
    steps:
      - checkout
      - <<: *poetry_build
      - run:
          name: Publish Package Test PyPI
          command: |
            poetry --version
            # poetry config repositories.testpypi https://test.pypi.org/legacy/
            # poetry publish -u __token__ -p ${} -r testpypi
    

  publish-to-pypi:
    docker:
      - image: cimg/python:3.10-node
    steps:
      - checkout
      - <<: *poetry_build
      - run:
          name: Publish Package PyPI
          command: |
            poetry --version 
            # poetry publish -u __token__ -p ${}

workflows:
  build_and_release:
    jobs:
      - run-unit-tests:
          matrix:
            parameters:
              pythonversion: ["3.8", "3.9", "3.10"]   
          name: run-unit-tests-<< matrix.pythonversion >>
      - verify
      - publish-to-test-pypi:
          requires:
            - run-unit-tests
            - verify
          filters:
            branches:
              only: sk_change_to_-poetry  # master
      - publish-to-pypi:
          requires:
            - run-unit-tests
            - verify
          filters:
            tags:
              only: /^test_sk_2+$/ #/^v\d+\.\d+\.\d+$/ # only run on tags [e.g. v0.0.0]
            branches:
              ignore: /.*/
          