### =============================================================
### This configuration file is used by CircleCI build server
### https://circleci.com/docs/config-sample
### =============================================================

install_poetry: &install_poetry
    - run:
        name: Install Poetry
        command: |
          # in old images we need to remove existing poetry
          rm -rf $HOME/.poetry/bin/poetry
          sudo curl -sSL https://install.python-poetry.org | python3 -
          poetry --version

install_project_dependencies: &install_project_dependencies
    - run:
        name: Install Project Dependencies
        command: |
          poetry install
jobs:
  run-unit-tests:
    parameters:
      pythonversion:
        type: string
    docker:
      - image: cimg/python:<< parameters.pythonversion >>-node
    steps:
      - checkout
      - <<: *install_poetry
      - <<: *install_project_dependencies
      - run:
          name: Run Unit Tests
          command: |
            poetry run pytest -v tests

workflows:
  version: 2.1
  build_and_release:
    jobs:
      - run-unit-tests:
          matrix:
            parameters:
              pythonversion: ["3.8", "3.9", "3.10"]   
          name: run-unit-tests-<< matrix.pythonversion >>

      - run:
            name: verify
            command: |
              ./verify.sh
      - run:
          name: Build Package
          command: |
            poetry build

      # Publish to TestPyPI if not a release branch
      - run:
          name: Publish to TestPyPI
          command: |
            echo "Non-release branch. Publishing to TestPyPI."
            poetry config pypi-token.pypi $TEST_PYPI_TOKEN
            poetry publish -r testpypi --build
           

# if [[ "${CIRCLE_BRANCH}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            #   echo "Release branch. Publishing to PyPI."
            #   poetry config pypi-token.pypi $PYPI_TOKEN
            #   poetry publish --build
            # else
          # fi